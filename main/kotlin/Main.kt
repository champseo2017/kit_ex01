/*

    Inheritance & Interface
    วิธีพัฒนาต่อเติมความสามารถจากคลาสเดิมที่มีอยู่แล้ว
    เรียกว่า การสืบทอด (Inheritance)

    รูปแบบการสืบทอดใน Kotlin จะใช้เครื่องหมายโคล่อน (:)

    class Subclass : Superclass () {
    }

    class NewClass : OldClass () {
    }

    - Kotlin ไม่สนับสนุนการสืบทอดจากหลายคลาส (Multiple Inheritance)
    ในแต่ละคลาสจะสืบทอดจากคลาสอื่นได้เพียงอันเดียวเท่านั้น

    - คลาสต่างๆ จะสืบทอดต่อเนื่องกันกี่ชั้นก็ได้ หากระบุโมดิฟายเออร์ open เช่น
    คลาส B สืบทอดจาก A และคลาส C สืบทอดจาก B เป็นต้น

    open class A { // ระบุโมดิฟายเออร์ open เพื่อบ่งชี้ว่า คลาสนี้สามารถสืบทอดได้
    }

    open class B : A() {
    }

    class C : B() {
    }

    class D : C() { // Error เพราะคลาส C ไม่ระบุโมดิฟายเออร์ open จึงสืบทอดไม่ได้
    }




* */

fun main(args: Array<String>) {

}