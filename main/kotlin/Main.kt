import kotlin.random.*

/*

    คอนสตรักเตอร์ของคลาส
     - เป็นการจัดเตรียมข้อมูลที่จำเป็นต่อการทำงานเริ่มแรกของคลาส
     เช่น คลาส Circle คอนสตรักเตอร์จะถูกเรียกเมื่อเราสร้างอินสแตนซ์ของ
     คลาสนั้น

      - Primary Constructor แบบพร็อปเพอร์ตี้
        - รับข้อมูลเข้ามาในคลาสด้วยรูปแบบพร็อปเพอร์ตี้ เขียนไว้ที่
        ส่วนหัวของคลาส Header คล้ายพารามิเตอร์ของฟังก์ชัน
         - ต้องระบุคีย์เวิร์ด var หรือ val ด้วย

       class Circle(var radius: Int) {
       }

       - ข้อมูลจะถูกจัดเก็บในพร็อปเพอร์ตี้เหล่านั้นโดยตรง ไม่จำเป็นต้องสร้างพร็อปเพอร์ตี้
       ขึ้นมาเก็บข้อมูลอีก

       - สามารถอ้างถึงพร็อปเพอร์ตี้เหล่านี้ได้ทั้งถายในและภายนอกคลาส หรือ นำไปใช้งาน
       ได้เหมือนกับพร็อปเพอร์ตี้แบบปกติ

       - เมื่อสร้างอินสแตนซ์ของคลาส ต้องระบุค่าให้กับคอนสตรักเตอร์ในลักษณะเดียวกับอาณ์กิวเมนต์
       ของฟังก์ชัน


* */

class Circle(var radius: Int, val PI: Double = 3.14159) {
    fun getArea() = PI * radius * radius
    fun getPerimeter() = 2 * PI * radius
}


fun main(args: Array<String>) {

    val c1 = Circle(10)
    println(c1.PI)

}
